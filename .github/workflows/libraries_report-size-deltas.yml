name: libraries/report-size-deltas workflow

on:
  pull_request:
    paths:
      - '.github/workflows/libraries_report-size-deltas.yml'
      - 'reportsizedeltas/**'

  push:
    paths:
      - '.github/workflows/libraries_report-size-deltas.yml'
      - 'reportsizedeltas/**'

jobs:
  test:
    runs-on: ubuntu-latest
    permissions: {}

    env:
      PYTHON_PROJECT_PATH: ${GITHUB_WORKSPACE}/reportsizedeltas
      PYTHON_PROJECT_TESTS_PATH: ${GITHUB_WORKSPACE}/reportsizedeltas/tests
      COVERAGE_DATA_FILENAME: coverage.xml

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.6'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: |
          poetry install \
            --no-root

      - name: Run Python unit tests and record code coverage data
        run: |
          export PYTHONPATH="${{ env.PYTHON_PROJECT_PATH }}"
          poetry run \
            coverage run \
              --source="${{ env.PYTHON_PROJECT_PATH }}" \
              --module pytest \
              "${{ env.PYTHON_PROJECT_TESTS_PATH }}"
          # Generate coverage data file for consumption by `codecov/codecov-action`.
          poetry run \
            coverage xml \
              -o "${{ github.workspace }}/${{ env.COVERAGE_DATA_FILENAME }}"

      - name: Display code coverage report
        run: |
          poetry run \
            coverage report

      # A token is used to avoid intermittent spurious job failures caused by rate limiting.
      - name: Set up Codecov upload token
        run: |
          if [[ "${{ github.repository }}" == "arduino/report-size-deltas" ]]; then
            # In order to avoid uploads of data from forks, only use the token for runs in the parent repo.
            # Token is intentionally exposed.
            # See: https://community.codecov.com/t/upload-issues-unable-to-locate-build-via-github-actions-api/3954
            CODECOV_TOKEN="3889efcb-4ed3-4d07-980a-99a3896bd9b8"
          else
            # codecov/codecov-action does unauthenticated upload if empty string is passed via the `token` input.
            CODECOV_TOKEN=""
          fi
          echo "CODECOV_TOKEN=$CODECOV_TOKEN" >> "$GITHUB_ENV"

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ${{ env.COVERAGE_DATA_FILENAME }}
          fail_ci_if_error: true
          token: ${{ env.CODECOV_TOKEN }}
